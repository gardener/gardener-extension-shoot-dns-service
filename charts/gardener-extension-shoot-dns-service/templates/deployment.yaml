apiVersion: apps/v1
kind: Deployment
metadata:
  name: gardener-extension-{{ .Values.serviceName }}
  namespace: {{ .Release.Namespace }}
  labels:
{{ include "labels" . | indent 4 }}
    high-availability-config.resources.gardener.cloud/type: controller
spec:
  revisionHistoryLimit: 0
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
{{ include "labels" . | indent 6 }}
  template:
    metadata:
      annotations:
        {{- if .Values.imageVectorOverwrite }}
        checksum/configmap-extension-imagevector-overwrite: {{ include (print $.Template.BasePath "/configmap-imagevector-overwrite.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.metrics.enableScraping }}
        prometheus.io/name: "{{ .Release.Name }}"
        prometheus.io/scrape: "true"
        prometheus.io/port: "{{ .Values.metrics.port }}"
        {{- end }}      
      labels:
        networking.gardener.cloud/to-runtime-apiserver: allowed
        networking.gardener.cloud/to-dns: allowed
{{ include "labels" . | indent 8 }}
    spec:
      priorityClassName: gardener-system-900
      serviceAccountName: gardener-extension-{{ .Values.serviceName }}
      containers:
      - name: gardener-extension-{{ .Values.serviceName }}
        image: {{ include "image" . }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        command:
        - /gardener-extension-shoot-dns-service
        - --lifecycle-max-concurrent-reconciles={{ .Values.controllers.lifecycle.concurrentSyncs }}
        - --healthcheck-max-concurrent-reconciles={{ .Values.controllers.healthcheck.concurrentSyncs }}
        - --replication-max-concurrent-reconciles={{ .Values.controllers.replication.concurrentSyncs }}
        - --ignore-operation-annotation={{ .Values.controllers.ignoreOperationAnnotation }}
        - --leader-election-id={{ include "leaderelectionid" . }}
        - --leader-election-resource-lock={{ .Values.leaderElection.resourceLock }}
        - --heartbeat-namespace={{ .Release.Namespace }} 
        - --heartbeat-renew-interval-seconds={{ .Values.controllers.heartbeat.renewIntervalSeconds }} 
        - --seed-id={{ .Values.gardener.seed.name }}
        - --dns-class={{ .Values.dnsClass }}
        {{- if .Values.dnsProviderManagement.enabled }}
        - --manage-dns-providers
        {{- end }}
        {{- if .Values.dnsProviderReplication.enabled }}
        - --replicate-dns-providers
        {{- end }}
        - --gardener-version={{ .Values.gardener.version }}
        {{- if .Values.remoteDefaultDomainSecret.enabled }}
        - --remote-default-domain-secret={{ .Release.Namespace }}/remote-default-domain
        {{- end }}
        env:
        - name: LEADER_ELECTION_NAMESPACE
          valueFrom:
            fieldRef:
              fieldPath: metadata.namespace
        {{- if .Values.imageVectorOverwrite }}
        - name: IMAGEVECTOR_OVERWRITE
          value: /charts_overwrite/images_overwrite.yaml
        {{- end }}
        {{- if .Values.resources }}
        resources:
{{ toYaml .Values.resources | trim | indent 10 }}
        {{- end }}
        {{- if .Values.imageVectorOverwrite }}
        volumeMounts:
        - name: extension-imagevector-overwrite
          mountPath: /charts_overwrite/
          readOnly: true
      volumes:
      - name: extension-imagevector-overwrite
        configMap:
          name: gardener-extension-{{ .Values.serviceName }}-imagevector-overwrite
          defaultMode: 420
        {{- end }}
