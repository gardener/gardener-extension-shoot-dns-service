---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: clusters.extensions.gardener.cloud
spec:
  conversion:
    strategy: None
  group: extensions.gardener.cloud
  names:
    kind: Cluster
    listKind: ClusterList
    plural: clusters
    singular: cluster
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Cluster is a specification for a Cluster resource.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ClusterSpec is the spec for a Cluster resource.
              properties:
                cloudProfile:
                  description: CloudProfile is a raw extension field that contains the
                    cloudprofile resource referenced by the shoot that has to be reconciled.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                seed:
                  description: Seed is a raw extension field that contains the seed
                    resource referenced by the shoot that has to be reconciled.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                shoot:
                  description: Shoot is a raw extension field that contains the shoot
                    resource that has to be reconciled.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
              required:
                - cloudProfile
                - seed
                - shoot
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: extensions.extensions.gardener.cloud
spec:
  conversion:
    strategy: None
  group: extensions.gardener.cloud
  names:
    kind: Extension
    listKind: ExtensionList
    plural: extensions
    shortNames:
      - ext
    singular: extension
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: The type of the Extension resource.
          jsonPath: .spec.type
          name: Type
          type: string
        - description: Status of Extension resource.
          jsonPath: .status.lastOperation.state
          name: Status
          type: string
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description: Extension is a specification for a Extension resource.
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              description: ExtensionSpec is the spec for a Extension resource.
              properties:
                providerConfig:
                  description: ProviderConfig is the provider specific configuration.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                type:
                  description: Type contains the instance of the resource's kind.
                  type: string
              required:
                - type
              type: object
            status:
              description: ExtensionStatus is the status for a Extension resource.
              properties:
                conditions:
                  description: Conditions represents the latest available observations
                    of a Seed's current state.
                  items:
                    description: Condition holds the information about the state of
                      a resource.
                    properties:
                      codes:
                        description: Well-defined error codes in case the condition
                          reports a problem.
                        items:
                          description: ErrorCode is a string alias.
                          type: string
                        type: array
                      lastTransitionTime:
                        description: Last time the condition transitioned from one status
                          to another.
                        format: date-time
                        type: string
                      lastUpdateTime:
                        description: Last time the condition was updated.
                        format: date-time
                        type: string
                      message:
                        description: A human readable message indicating details about
                          the transition.
                        type: string
                      reason:
                        description: The reason for the condition's last transition.
                        type: string
                      status:
                        description: Status of the condition, one of True, False, Unknown.
                        type: string
                      type:
                        description: Type of the Shoot condition.
                        type: string
                    required:
                      - lastTransitionTime
                      - lastUpdateTime
                      - message
                      - reason
                      - status
                      - type
                    type: object
                  type: array
                lastError:
                  description: LastError holds information about the last occurred error
                    during an operation.
                  properties:
                    codes:
                      description: Well-defined error codes of the last error(s).
                      items:
                        description: ErrorCode is a string alias.
                        type: string
                      type: array
                    description:
                      description: A human readable message indicating details about
                        the last error.
                      type: string
                    lastUpdateTime:
                      description: Last time the error was reported
                      format: date-time
                      type: string
                    taskID:
                      description: ID of the task which caused this last error
                      type: string
                  required:
                    - description
                  type: object
                lastOperation:
                  description: LastOperation holds information about the last operation
                    on the resource.
                  properties:
                    description:
                      description: A human readable message indicating details about
                        the last operation.
                      type: string
                    lastUpdateTime:
                      description: Last time the operation state transitioned from one
                        to another.
                      format: date-time
                      type: string
                    progress:
                      description: The progress in percentage (0-100) of the last operation.
                      format: int32
                      type: integer
                    state:
                      description: Status of the last operation, one of Aborted, Processing,
                        Succeeded, Error, Failed.
                      type: string
                    type:
                      description: Type of the last operation, one of Create, Reconcile,
                        Delete.
                      type: string
                  required:
                    - description
                    - lastUpdateTime
                    - progress
                    - state
                    - type
                  type: object
                observedGeneration:
                  description: ObservedGeneration is the most recent generation observed
                    for this resource.
                  format: int64
                  type: integer
                providerStatus:
                  description: ProviderStatus contains provider-specific status.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                resources:
                  description: Resources holds a list of named resource references that
                    can be referred to in the state by their names.
                  items:
                    description: NamedResourceReference is a named reference to a resource.
                    properties:
                      name:
                        description: Name of the resource reference.
                        type: string
                      resourceRef:
                        description: ResourceRef is a reference to a resource.
                        properties:
                          apiVersion:
                            description: API version of the referent
                            type: string
                          kind:
                            description: 'Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"'
                            type: string
                          name:
                            description: 'Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names'
                            type: string
                        required:
                          - kind
                          - name
                        type: object
                    required:
                      - name
                      - resourceRef
                    type: object
                  type: array
                state:
                  description: State can be filled by the operating controller with
                    what ever data it needs.
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}

---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: dnsentries.dns.gardener.cloud
spec:
  group: dns.gardener.cloud
  names:
    kind: DNSEntry
    listKind: DNSEntryList
    plural: dnsentries
    shortNames:
      - dnse
    singular: dnsentry
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - description: FQDN of DNS Entry
          jsonPath: .spec.dnsName
          name: DNS
          type: string
        - description: provider type
          jsonPath: .status.providerType
          name: TYPE
          type: string
        - description: assigned provider (namespace/name)
          jsonPath: .status.provider
          name: PROVIDER
          type: string
        - description: entry status
          jsonPath: .status.state
          name: STATUS
          type: string
        - description: entry creation timestamp
          jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
        - description: effective targets
          jsonPath: .status.targets
          name: TARGETS
          type: string
        - description: owner id used to tag entries in external DNS system
          jsonPath: .spec.ownerId
          name: OWNERID
          type: string
        - description: time to live
          jsonPath: .status.ttl
          name: TTL
          priority: 2000
          type: integer
        - description: zone id
          jsonPath: .status.zone
          name: ZONE
          priority: 2000
          type: string
        - description: routing policy type
          jsonPath: .status.routingPolicy.type
          name: POLICY_TYPE
          priority: 2000
          type: string
        - description: routing policy set identifier
          jsonPath: .status.routingPolicy.setIdentifier
          name: POLICY_SETID
          priority: 2000
          type: string
        - description: routing policy parameters
          jsonPath: .status.routingPolicy.parameters
          name: POLICY_PARAMS
          priority: 2000
          type: string
        - description: message describing the reason for the state
          jsonPath: .status.message
          name: MESSAGE
          priority: 2000
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation
              of an object. Servers should convert recognized schemas to the latest
              internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this
              object represents. Servers may infer this from the endpoint the client
              submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                cnameLookupInterval:
                  description: lookup interval for CNAMEs that must be resolved to IP
                    addresses. Only used if `resolveTargetsToAddresses` is set to true
                    or targets consists of multiple domain names.
                  format: int64
                  type: integer
                dnsName:
                  description: full qualified domain name
                  type: string
                ownerId:
                  description: owner id used to tag entries in external DNS system
                  type: string
                reference:
                  description: reference to base entry used to inherit attributes from
                  properties:
                    name:
                      description: name of the referenced DNSEntry object
                      type: string
                    namespace:
                      description: namespace of the referenced DNSEntry object
                      type: string
                  required:
                    - name
                  type: object
                resolveTargetsToAddresses:
                  description: enables translation of a target domain name in the resolved
                    IPv4 and IPv6 addresses. If enabled, `A` and/or `AAAA` records are
                    created instead of a `CNAME` record. If the target list contains
                    multiple targets, it is enabled implicitly.
                  type: boolean
                routingPolicy:
                  description: optional routing policy
                  properties:
                    parameters:
                      additionalProperties:
                        type: string
                      description: Policy specific parameters
                      type: object
                    setIdentifier:
                      description: SetIdentifier is the identifier of the record set
                      type: string
                    type:
                      description: Policy is the policy type. Allowed values are provider
                        dependent, e.g. `weighted`
                      type: string
                  required:
                    - parameters
                    - setIdentifier
                    - type
                  type: object
                targets:
                  description: target records (CNAME or A records), either text or targets
                    must be specified
                  items:
                    type: string
                  type: array
                text:
                  description: text records, either text or targets must be specified
                  items:
                    type: string
                  type: array
                ttl:
                  description: time to live for records in external DNS system
                  format: int64
                  type: integer
              required:
                - dnsName
              type: object
            status:
              properties:
                cnameLookupInterval:
                  description: effective lookup interval for CNAMEs that must be resolved
                    to IP addresses
                  format: int64
                  type: integer
                lastUpdateTime:
                  description: lastUpdateTime contains the timestamp of the last status
                    update
                  format: date-time
                  type: string
                message:
                  description: message describing the reason for the state
                  type: string
                observedGeneration:
                  format: int64
                  type: integer
                provider:
                  description: assigned provider
                  type: string
                providerType:
                  description: provider type used for the entry
                  type: string
                routingPolicy:
                  description: effective routing policy
                  properties:
                    parameters:
                      additionalProperties:
                        type: string
                      description: Policy specific parameters
                      type: object
                    setIdentifier:
                      description: SetIdentifier is the identifier of the record set
                      type: string
                    type:
                      description: Policy is the policy type. Allowed values are provider
                        dependent, e.g. `weighted`
                      type: string
                  required:
                    - parameters
                    - setIdentifier
                    - type
                  type: object
                state:
                  description: entry state
                  type: string
                targets:
                  description: effective targets generated for the entry
                  items:
                    type: string
                  type: array
                ttl:
                  description: time to live used for the entry
                  format: int64
                  type: integer
                zone:
                  description: zone used for the entry
                  type: string
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: dnsowners.dns.gardener.cloud
spec:
  group: dns.gardener.cloud
  names:
    kind: DNSOwner
    listKind: DNSOwnerList
    plural: dnsowners
    shortNames:
      - dnso
    singular: dnsowner
  scope: Cluster
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.ownerId
          name: OwnerId
          type: string
        - jsonPath: .status.active
          name: Active
          type: boolean
        - jsonPath: .status.entries.amount
          name: Usages
          type: integer
        - description: expiration date
          format: date-time
          jsonPath: .spec.validUntil
          name: Valid
          type: string
        - description: creation timestamp
          jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                active:
                  description: state of the ownerid for the DNS controller observing entry using this owner id (default:true)
                  type: boolean
                dnsActivation:
                  description: Optional activation info for controlling the owner activation remotely via DNS TXT record
                  properties:
                    dnsName:
                      description: DNS name for controlling the owner activation remotely via DNS TXT record
                      type: string
                    value:
                      description: Optional value for the DNS activation record used to activate this owner The default is the id of the cluster used to read the owner object
                      type: string
                  required:
                    - dnsName
                  type: object
                ownerId:
                  description: owner id used to tag entries in external DNS system
                  type: string
                validUntil:
                  description: optional time this owner should be active if active flag is not false
                  format: date-time
                  type: string
              required:
                - ownerId
              type: object
            status:
              properties:
                active:
                  description: state of the ownerid for the DNS controller observing entry using this owner id
                  type: boolean
                entries:
                  description: Entry statistic for this owner id
                  properties:
                    amount:
                      description: number of entries using this owner id
                      type: integer
                    types:
                      additionalProperties:
                        type: integer
                      description: number of entries per provider type
                      type: object
                  type: object
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  name: dnsproviders.dns.gardener.cloud
spec:
  group: dns.gardener.cloud
  names:
    kind: DNSProvider
    listKind: DNSProviderList
    plural: dnsproviders
    shortNames:
      - dnspr
    singular: dnsprovider
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .spec.type
          name: TYPE
          type: string
        - jsonPath: .status.state
          name: STATUS
          type: string
        - description: creation timestamp
          jsonPath: .metadata.creationTimestamp
          name: AGE
          type: date
        - description: included domains
          jsonPath: .status.domains.included
          name: INCLUDED_DOMAINS
          type: string
        - description: included zones
          jsonPath: .status.zones.included
          name: INCLUDED_ZONES
          priority: 2000
          type: string
        - description: message describing the reason for the state
          jsonPath: .status.message
          name: MESSAGE
          priority: 2000
          type: string
      name: v1alpha1
      schema:
        openAPIV3Schema:
          properties:
            apiVersion:
              description: 'APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources'
              type: string
            kind:
              description: 'Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds'
              type: string
            metadata:
              type: object
            spec:
              properties:
                defaultTTL:
                  description: default TTL used for DNS entries if not specified explicitly
                  format: int64
                  type: integer
                domains:
                  description: desired selection of usable domains (by default all zones and domains in those zones will be served)
                  properties:
                    exclude:
                      description: values that should be ignored (domains or zones)
                      items:
                        type: string
                      type: array
                    include:
                      description: values that should be observed (domains or zones)
                      items:
                        type: string
                      type: array
                  type: object
                providerConfig:
                  description: optional additional provider specific configuration values
                  type: object
                  x-kubernetes-preserve-unknown-fields: true
                secretRef:
                  description: access credential for the external DNS system of the given type
                  properties:
                    name:
                      description: Name is unique within a namespace to reference a secret resource.
                      type: string
                    namespace:
                      description: Namespace defines the space within which the secret name must be unique.
                      type: string
                  type: object
                type:
                  description: type of the provider (selecting the responsible type of DNS controller)
                  type: string
                zones:
                  description: desired selection of usable domains the domain selection is used for served zones, only (by default all zones will be served)
                  properties:
                    exclude:
                      description: values that should be ignored (domains or zones)
                      items:
                        type: string
                      type: array
                    include:
                      description: values that should be observed (domains or zones)
                      items:
                        type: string
                      type: array
                  type: object
              type: object
            status:
              properties:
                defaultTTL:
                  description: actually used default TTL for DNS entries
                  format: int64
                  type: integer
                domains:
                  description: actually served domain selection
                  properties:
                    excluded:
                      description: Excluded values (domains or zones)
                      items:
                        type: string
                      type: array
                    included:
                      description: included values (domains or zones)
                      items:
                        type: string
                      type: array
                  type: object
                lastUpdateTime:
                  description: lastUpdateTime contains the timestamp of the last status update
                  format: date-time
                  type: string
                message:
                  description: message describing the reason for the actual state of the provider
                  type: string
                observedGeneration:
                  format: int64
                  type: integer
                state:
                  description: state of the provider
                  type: string
                zones:
                  description: actually served zones
                  properties:
                    excluded:
                      description: Excluded values (domains or zones)
                      items:
                        type: string
                      type: array
                    included:
                      description: included values (domains or zones)
                      items:
                        type: string
                      type: array
                  type: object
              type: object
          required:
            - spec
          type: object
      served: true
      storage: true
      subresources:
        status: {}

